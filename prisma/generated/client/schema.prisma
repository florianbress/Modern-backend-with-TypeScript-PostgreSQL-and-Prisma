// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
    output   = "./generated/client"
}

model User {
    id        Int      @id @default(autoincrement())
    updatedAt DateTime @updatedAt
    createdAt DateTime @default(now())
    email     String   @unique
    firstName String
    lastName  String
    social    Json?

    // Relation fields
    courses     CourseEnrollment[]
    TestResults TestResult[]       @relation(name: "results")
    TestsGraded TestResult[]       @relation(name: "graded")
}

model Course {
    id            Int                @id @default(autoincrement())
    name          String
    courseDetails String
    members       CourseEnrollment[]
    tests         Test[]
}

model CourseEnrollment {
    createdAt DateTime @default(now())
    role      UserRole
    userId    Int
    user      User     @relation(fields: [userId], references: [id])
    courseId  Int
    course    Course   @relation(fields: [courseId], references: [id])

    @@id([userId, courseId, role])
}

model Test {
    id          Int          @id @default(autoincrement())
    updatedAt   DateTime     @updatedAt
    name        String
    date        DateTime
    // Relation fields
    courseId    Int
    course      Course       @relation(fields: [courseId], references: [id])
    testResults TestResult[]
}

model TestResult {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    result    Int

    // Relation fields
    graderId  Int
    gradedBy  User @relation(name: "graded", fields: [graderId], references: [id])
    studentId Int
    student   User @relation(name: "results", fields: [studentId], references: [id])
    testId    Int
    test      Test @relation(fields: [testId], references: [id])
}

enum UserRole {
    STUDENT
    TEACHER
}
